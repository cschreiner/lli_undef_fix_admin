#!/usr/bin/perl
# counts the number of times an LLVM IR instruction is used in a set of files

@terminator_insts=qw (ret br switch indirectbr invoke resume unreachable);
@binary_insts=qw(add sub mul udiv sdiv urem srem);
      # excluding floating-point: fadd fsub fmul fdiv frem
@bitwise_insts=qw(shl lshr ashr and or xor);
@vector_insts=qw(extractelement insertelement shufflevector);
@aggregate_insts=qw(extractvalue insertvalue);
@mem_insts=qw(alloca load store fence cmpxchg atomicrmw getelementptr);
@conversion_insts=qw(trunc zext sext ptrtoint inttoptr bitcast addrspacecast);
      # excluding floating point: fptrunc fpext fptoui fptosi uitofp sitofp
@other_insts=qw(icmp phi select call va_arg landingpad);
      # excluding floating point: fcmp
@bit_manip_insts=qw(llvm.bswap llvm.ctpop llvm.ctlz llvm.cttz);
@arith_w_oflow_insts=qw(llvm.sadd.with.overflow llvm.uadd.with.overflow
      llvm.ssub.with.overflow llvm.usub.with.overflow
      llvm.smul.with.overflow llvm.umul.with.overflow );

@all_insts= ( @terminator_insts, @binary_insts, @bitwise_insts, @vector_insts, 
      @aggregate_insts, @mem_insts, @conversion_insts, @other_insts,
      @bit_manip_insts, @arith_w_oflow_insts, );

our( %count_hash );
foreach my $inst ( @all_insts )  {
   $count_hash{$inst}= 0;
}

our( @file_group_list );
{
   use constant FILES_PER_CHUNK => 100;
   for ( my $ii= $[; ii < scalar(@ARGV); $ii+= FILES_PER_CHUNK )  {
      my $stop= $ii+ FILES_PER_CHUNK- 1;
      if ( $stop > scalar(@ARGV) )  {
         $stop= scalar(@ARGV);
      }
      push @file_group_list, join( " ", $ARGV[$ii..$stop] );
   }
}
print "created " . scalar(@file_group_list) . " file groups \n";


my $ii= 0;
foreach my $file_group ( @file_group_list )  {
   print "processing file group $ii \n";
   foreach my $inst ( @all_insts )  {

      my $cmd="grep -E \"\\b$inst\\b\"";
      if ( 0 )  {
	 print "cmd=<$cmd>\n";
      }
      
      $count=`$cmd $file_group | grep -c ^`;
      chomp $count;
      $count_hash{$inst}+= $count;
   }
   $ii++;
}

foreach my $inst ( @all_insts )  {
   print "$count $inst \n";
}


