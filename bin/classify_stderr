#!/bin/sh
# classify the different stderr files produced by test_generate_llvm_assembler
# by the reason the corresponding script halted.

num_poison_ftn_calls=0
num_poison_volatile_mem_writes=0
num_div_by_zeros=0
num_rem_by_zeros=0
num_completed=0

for errfile in $*; do 
   grep -q 'external function with a poison value' $errfile 
   pf=$?
   grep -q 'poison value to a volatile memory' $errfile
   pm=$?
   grep -q 'Divide by zero' $errfile
   dz=$?
   grep -q 'Remainder by zero' $errfile
   rz=$?
   if [ $pf -eq 0 ]; then
      num_poison_ftn_calls=$(( $num_poison_ftn_calls+1 ))
   elif [ $pm -eq 0 ]; then
      num_poison_volatile_mem_writes=$(( $num_poison_volatile_mem_writes+1 ))
   elif [ $dz -eq 0 ]; then
      num_div_by_zeros=$(( $num_div_by_zeros+1 ))
   elif [ $rz -eq 0 ]; then
      num_rem_by_zeros=$(( $num_rem_by_zeros+1 ))
   elif [ -e $errfile -a ! -s $errfile ]; then
      num_completed=$(( $num_completed+1 ))
   else
      echo $errfile is unclassified
   fi
done

echo num_poison_ftn_calls=$num_poison_ftn_calls
echo num_poison_volatile_mem_writes=$num_poison_volatile_mem_writes
echo num_div_by_zeros=$num_div_by_zeros
echo num_rem_by_zeros=$num_rem_by_zeros
echo num_completed=$num_completed
total=$(( $num_poison_ftn_calls + $num_poison_volatile_mem_writes + \
      $num_div_by_zeros + $num_rem_by_zeros + $num_completed ))
echo total=$total



